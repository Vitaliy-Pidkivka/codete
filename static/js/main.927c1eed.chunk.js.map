{"version":3,"sources":["components/shared/InputField.js","components/shared/FileUploadWidget.js","utils/validators.js","utils/helpers.js","components/ProfileForm.js","redux/profileReducer.js","components/shared/TextGroup.js","App.js","redux/profile-selectors.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["StyledInput","styled","input","isInvalid","InputField","props","field","form","onChange","placeholder","name","value","errors","setFieldTouched","touched","styledInputProps","onBlur","fields","styles","createStyles","root","display","backgroundColor","cursor","borderRadius","marginLeft","marginRight","Label","div","withStyles","classes","accept","id","type","FormLabel","color","htmlFor","variant","removeUnderscore","string","replace","stringRequiredField","yupString","required","FIELDS","FORM_FIELDS","map","component","FileUploadWidget","initialValues","reduce","result","avatar_logo","validationSchema","yupObject","shape","names","setStringRequiredFields","ProfileForm","setProfile","uploadAvatarUrl","onChangeHandlers","target","files","file","length","onSubmit","values","setSubmitting","resetForm","profileInfo","Object","entries","item","index","handleChange","isSubmitting","isValid","disabled","key","Button","initialState","isHiding","profileReducer","state","action","Heading","h3","Paragraph","p","TextGroup","heading","text","StyledApp","Wrapper","section","Dashboard","Avatar","img","connect","profile","profileData","useState","avatarUrl","setAvatarUrl","textProfileFields","alt","src","reader","FileReader","addEventListener","readAsDataURL","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.927c1eed.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  border-color: ${({ isInvalid }) => isInvalid ? 'red' : ''};\n  border-radius: 4px;\n  height: 40px;\n  padding: 0 10px;\n  text-transform: capitalize;\n  margin: 20px 0 0;\n  width: 100%;\n  box-sizing: border-box;\n  \n  &:focus::placeholder{\n     color: transparent;\n  }\n`\nconst InputField = (props) => {\n    const { field = {}, form, onChange, placeholder = '' } = props\n    const { name, value } = field\n    const { errors = {}, setFieldTouched, touched = {} } = form\n\n    const isInvalid = touched[name] && errors[name];\n\n    const onBlur = () => setFieldTouched(name, true);\n\n    const styledInputProps = { isInvalid, name, placeholder, onBlur, onChange, value }\n\n    return (\n        <StyledInput {...styledInputProps} />\n    )\n}\n\nexport default InputField","import React, {Fragment} from 'react';\nimport styled from 'styled-components';\nimport {FormLabel} from '@material-ui/core';\nimport withStyles from \"@material-ui/core/es/styles/withStyles\";\nimport {createStyles} from \"@material-ui/styles\";\n\nconst styles = createStyles({\n    root: {\n        display: 'block',\n        backgroundColor: '#3f51b5',\n        cursor: 'pointer',\n        borderRadius: '2px',\n        marginLeft: '2px',\n        marginRight: '2px',\n    }\n})\n\nconst StyledInput = styled.input`\n  display: none;\n`\n\nconst Label = styled.div`\n  text-transform: uppercase;\n  color: white;\n  transition: all .3s ease;\n  padding: 10px 4px;\n  cursor: pointer;\n  display: block;\n  box-sizing: border-box;\n  margin-top: 20px;\n  font-weight: bold;\n  font-family: cursive;\n  margin-bottom: 10px;\n  border-radius: 2px;\n  \n  &:hover {\n    background: #f4e5b1;\n    color: black; \n  }\n`\n\nconst INPUT_ID = 'upload_avatar_input'\n\nconst FileUploadWidget = (props) => {\n    const { classes: { root }, field: { name } = {}, onChange } = props\n    return (\n        <Fragment>\n            <StyledInput\n                accept=\"image/*\"\n                id={INPUT_ID}\n                type=\"file\"\n                {...{ name, onChange }}\n            />\n            <FormLabel\n                color=\"primary\"\n                classes={{root}}\n                htmlFor={INPUT_ID}\n                variant=\"contained\"\n            >\n                <Label>UPLOAD IMAGE</Label>\n            </FormLabel>\n        </Fragment>\n    )\n}\n\nexport default withStyles(styles)(FileUploadWidget)\n","import { object as yupObject, string as yupString } from 'yup';\n\nconst stringRequiredField = yupString().required('Field is required')\n\nconst setStringRequiredFields = (names = []) =>\n  names.reduce(\n    (result, name) => ({\n      ...result,\n      [name]: stringRequiredField\n    }),\n    {}\n  );\n\nexport const createValidationSchema = (fields) => yupObject().shape(setStringRequiredFields(fields))","export const removeUnderscore = (string = '') => string.replace(/_/g, ' ')\n","import React from 'react';\nimport {Field, Form, Formik} from 'formik';\nimport InputField from './shared/InputField';\nimport FileUploadWidget from './shared/FileUploadWidget';\nimport Button from \"@material-ui/core/Button\";\nimport {removeUnderscore} from '../utils/helpers'\nimport {createValidationSchema} from '../utils/validators'\n\nconst FIELDS = ['first_name', 'last_name', 'phone', 'email', 'birthday', 'city']\nconst FORM_FIELDS = [\n  ...FIELDS.map((name) => ({ name, placeholder: removeUnderscore(name) })), {\n    component: FileUploadWidget,\n    name: 'avatar_logo',\n}]\n\nconst initialValues = FIELDS.reduce((result, name) => ({...result, [name]: ''}), { avatar_logo: '' })\nconst validationSchema = createValidationSchema(FIELDS)\n\nconst ProfileForm = ({classes, setProfile, uploadAvatarUrl}) => {\n    const onChangeHandlers = {\n        avatar_logo: ({ target }) => {\n            const { length, ...uploadedFiles } = target.files\n            const file = uploadedFiles[0]\n            uploadAvatarUrl(file);\n        }\n    }\n    const onSubmit = (values, {setSubmitting, resetForm}) => {\n        setSubmitting(true);\n        const entries = Object.entries(values)\n        const profileInfo = entries.map((item, index) => ({\n            name: removeUnderscore(item[0]),\n            value: item[1],\n            id: index,\n        }))\n        setProfile(profileInfo)\n        setSubmitting(false);\n        resetForm();\n    }\n    return (\n        <Formik\n          onSubmit={onSubmit}\n          {...{ initialValues, validationSchema }}\n        >\n            {({ handleChange, isSubmitting, isValid }) => {\n                const disabled = isSubmitting || !isValid\n                return (\n                    <Form >\n                        {FORM_FIELDS.map(({ component = InputField, name, placeholder}) => (\n                          <Field\n                            key={name}\n                            onChange={onChangeHandlers[name] || handleChange}\n                            {...{ component, name, placeholder }}\n                          />\n                        ))}\n                        <Button\n                          color=\"primary\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          disabled={disabled}\n                        >\n                            Send profile\n                        </Button>\n                    </Form>\n                );\n            }}\n\n        </Formik>\n    )\n}\n\nexport default ProfileForm\n\n","const SET_PROFILE = 'SET-PROFILE';\n\nlet initialState = {\n    isHiding: true,\n    profileInfo: [\n        {id: 0, name: 'first_name', value: ''},\n        {id: 1, name: 'last_name', value: ''},\n        {id: 2, name: 'phone', value: ''},\n        {id: 3, name: 'email', value: ''},\n        {id: 4, name: 'birthday', value: ''},\n        {id: 5, name: 'city', value: ''},\n        {id: 6, name: 'avatar_logo', value: ''},\n    ]\n\n    //     {\n    //     first_name: '',\n    //     last_name: '',\n    //     phone: '',\n    //     email: '',\n    //     birthday: '',\n    //     city: '',\n    //     avatar_logo: ''\n    // }\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_PROFILE: {\n            return {\n                ...state,\n                isHiding: false,\n                profileInfo: action.profileInfo\n            }\n        }\n        default : {\n            return {\n                ...state\n            }\n        }\n    }\n}\nexport const setProfile = (profileData) => {\n    return {\n        type: SET_PROFILE,\n        profileInfo: profileData\n    }\n}\n\n\nexport default profileReducer\n","import React, {Fragment} from 'react';\nimport styled from 'styled-components';\n\n\nconst Heading = styled.h3`\n    margin-top: 6px;\n    letter-spacing: 2px;\n    color: aqua;\n    margin-bottom:4px;\n`\nconst Paragraph = styled.p`\n    color: yellow;\n    margin-top: 2px;\n    margin-bottom: 6px;\n`\n\nconst TextGroup = ({ heading, text }) => (\n  <Fragment>\n    <Heading>\n      {heading}\n    </Heading>\n    <Paragraph>\n      {text}\n    </Paragraph>\n  </Fragment>\n)\n\nexport default TextGroup\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport './App.css';\nimport ProfileForm from './components/ProfileForm'\nimport {getIsHiding, getProfileInfo} from \"./redux/profile-selectors\";\nimport {setProfile} from \"./redux/profileReducer\";\nimport {connect} from \"react-redux\";\nimport TextGroup from \"./components/shared/TextGroup\";\n\n\nconst StyledApp = styled.div`\n     background-color: #282c34;\n     flex: 0 1 500px;\n     border-radius: 8px;\n     box-shadow:  0 0 12px #282c34;\n     text-align: center;\n`\nconst Wrapper = styled.section`\n     background: papayawhip;\n     min-height: 100vh;\n     display: flex;\n     justify-content: center;\n     align-items: center;\n     padding-left: 415px;\n     padding-right: 15px;\n`\nconst Dashboard = styled.div`\n     position: fixed;\n     top: 10px;\n     bottom: 10px;\n     left: 5px;\n     height: 400px;\n     width: 400px;\n     background-color: #282c34;\n     text-align: center;\n     border-radius: 8px;\n     box-shadow:  0 0 12px #282c34;\n     height: calc(100% - 20px);\n     color: white;\n     transition: all 1s ease-in-out;\n     visibility: ${({ isHiding }) => isHiding ? 'hidden' : 'visible'};\n     opacity: ${({ isHiding }) => isHiding ? '0' : '1'};\n     \n     h1 { \n        text-transform: uppercase; \n     }\n`\nconst Avatar = styled.img`\n     display: block;\n     max-width: 50%;\n     margin: 5px auto 5px;\n     box-shadow: 0 0 10px white;\n`\n\nconst App = ({profileInfo, setProfile, isHiding}) => {\n    const [avatarUrl, setAvatarUrl] = useState('')\n    const [avatar, ...textProfileFields] = profileInfo\n\n    const uploadAvatarUrl = (file) => {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", () => {\n            setAvatarUrl(reader.result)\n        }, false);\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    }\n    return (\n        <Wrapper>\n            <Dashboard isHiding={isHiding}>\n                <h1>Profile Info:</h1>\n                {avatarUrl && (\n                  <Avatar alt=\"Avatar\" src={avatarUrl}/>\n                )}\n                {textProfileFields.map(({name, id, value}) => (\n                    <TextGroup\n                        key={id}\n                        heading={name}\n                        text={value}\n                    />\n                ))}\n            </Dashboard>\n            <StyledApp>\n                <ProfileForm\n                    {...{setProfile, uploadAvatarUrl}}\n                />\n            </StyledApp>\n        </Wrapper>\n    );\n}\nconst mapDispatchToProps = (state) => ({\n    isHiding: getIsHiding(state),\n    profileInfo: getProfileInfo(state)\n})\n\nexport default connect(mapDispatchToProps, {setProfile})(App);\n","export const getIsHiding = ({ profile}) => profile.isHiding\nexport const getProfileInfo = ({ profile }) => profile.profileInfo\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\n// import thunkMiddleware from 'redux-thunk';\nimport profileReducer from \"./profileReducer\";\n\nlet reducers = combineReducers({\n    profile: profileReducer,\n})\n\nlet store = createStore(reducers);\n\n//applyMiddleware(thunkMiddleware)\n//\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n            <App  store={store}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}